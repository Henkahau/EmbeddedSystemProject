<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>